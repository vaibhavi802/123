install.packages("conjoint")
library(conjoint)
df= read.csv("pizza_data.csv")
str(df)
unique(df)
library(dplyr)
model <- ranking ~ brand + price + weight + crust + cheese + size + toppings + spicy
df$brand <- factor(df$brand)
df$price <- factor(df$price)
df$weight <- factor(df$weight)
df$crust <- factor(df$crust)
df$cheese <- factor(df$cheese)
df$size <- factor(df$size)
df$toppings <- factor(df$toppings)
df$spicy <- factor(df$spicy)
model_fit <- lm(model, data = df)
summary(model_fit)
conjoint_attributes <- c('brand', 'price', 'weight', 'crust', 'cheese', 'size', 
'toppings', 'spicy') 
level_name <- list() 
part_worth <- list() 
part_worth_range <- numeric() 
important_levels <- list() 
end <- 1 
for (item in conjoint_attributes) {
levels <- unique(df[[item]]) 
nlevels <- length(levels) 
level_name[[item]] <- levels 
begin <- end 
end <- begin + nlevels - 1 
new_part_worth <- coef(model_fit)[begin:end] 
new_part_worth <- c(new_part_worth, (-1) * sum(new_part_worth)) 
important_levels[[item]] <- which.max(new_part_worth) 
part_worth[[item]] <- new_part_worth 
print(item) 
part_worth_range <- c(part_worth_range, max(new_part_worth) -
min(new_part_worth)) 
}
cat("level name:\n")
print(level_name)
cat("npw with sum element:\n")
print(new_part_worth)
cat("imp level:\n")
print(important_levels)
cat("part worth:\n")
print(part_worth)
cat("part_worth_range:\n")
print(part_worth_range)
cat("length of part worth:\n")
print(length(part_worth))
cat("important levels:\n")
print(important_levels)
attribute_importance <- numeric()
for (i in part_worth_range) {
importance <- round(100 * (i / sum(part_worth_range)), 2)
attribute_importance <- c(attribute_importance, importance)
}
print(attribute_importance)
part_worth_dict <- list()
attrib_level <- list()
for (i in 1:length(conjoint_attributes)) {
cat("Attribute :", conjoint_attributes[i], "\n")
cat(" Relative importance of attribute ", attribute_importance[i], "\n")
cat(" Level wise part worths: \n")
for (j in 1:length(level_name[[i]])) {
cat(" ", conjoint_attributes[i], ":", level_name[[i]][j], ":", 
part_worth[[i]][j], "\n")
part_worth_dict[[level_name[[i]][j]]] <- part_worth[[i]][j]
} 
attrib_level[[conjoint_attributes[i]]] <- level_name[[i]]
}
print(part_worth_dict)
# Set up the graphical parameters
par(mar = c(5, 4, 4, 6) + 0.1) # Adjust margins for better appearance
barplot(attribute_importance, 
names.arg = conjoint_aÆ©ributes, 
main = 'Relative importance of attributes',
xlab = 'Attributes',
ylab = 'Importance')
percentage_contribution <- (attribute_importance / 
sum(attribute_importance)) * 100
text(x = 1:length(conjoint_attributes), y = attribute_importance, 
labels = paste0(round(percentage_contribution, 2), "%"), pos = 3)
Interpretation:
Brand is the attribute with the highest relative importance at 32%, followed by weights at 28.23% 
and crust at 21.88%. Price, cheese and size are the least important attributes.
utility <- numeric()
for (i in 1:nrow(df)) {
score <- part_worth_dict[[df$brand[i]]] +
part_worth_dict[[df$price[i]]] +
part_worth_dict[[df$weight[i]]] +
part_worth_dict[[df$crust[i]]] +
part_worth_dict[[df$cheese[i]]] +
part_worth_dict[[df$size[i]]] +
part_worth_dict[[df$toppings[i]]] +
part_worth_dict[[df$spicy[i]]]
utility <- c(utility, score)}
df$utility <- utility
utility
# Create a sequence of row numbers
row_numbers <- 1:nrow(df)
# Create a histogram of utility scores
hist(df$utility, main = "Utility Score Distribution", xlab = "Utility Score", ylab = "Frequency")
index_highest_utility <- which.max(df$utility)
print("The profile that has the highest utility score:")
print(df[index_highest_utility, ])
